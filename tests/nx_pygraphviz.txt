nx_pydot
========

>>> from networkx import *
>>> from networkx.drawing import *
>>> from networkx.drawing.nx_pygraphviz import *

>>> import os

Undirected
----------

>>> H=Graph()
>>> H.add_edge('A','B')
>>> H.add_edge('A','C')
>>> H.add_edge('B','C')
>>> H.add_edge('A','D')
>>> H.add_node('E')


>>> P=pygraphviz_from_networkx(H)
>>> N=networkx_from_pygraphviz(P)
>>> sorted(N.nodes())==sorted(H.nodes())
True
>>> sorted(N.edges())==sorted(H.edges())
True


>>> import tempfile
>>> fname=tempfile.mktemp()
>>> write_dot(N,fname)


>>> Hin=read_dot(fname)
>>> os.unlink(fname)
>>> sorted(Hin.nodes())==sorted(H.nodes())
True
>>> sorted(Hin.edges())==sorted(H.edges())
True

Directed
----------

>>> H=DiGraph()
>>> H.add_edge('A','B')
>>> H.add_edge('A','C')
>>> H.add_edge('B','C')
>>> H.add_edge('A','D')
>>> H.add_node('E')


>>> P=pygraphviz_from_networkx(H)
>>> N=networkx_from_pygraphviz(P)
>>> sorted(N.nodes())==sorted(H.nodes())
True
>>> sorted(N.edges())==sorted(H.edges())
True

>>> import tempfile
>>> fname=tempfile.mktemp()
>>> write_dot(N,fname)


>>> Hin=read_dot(fname)
>>> os.unlink(fname)
>>> sorted(Hin.nodes())==sorted(H.nodes())
True
>>> sorted(Hin.edges())==sorted(H.edges())
True

>>> pos=graphviz_layout(H,prog="circo",args="-Gepsilon=0.1",root='A')
